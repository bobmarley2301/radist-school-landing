const express = require("express");
const crypto = require("crypto");
const axios = require("axios");

const app = express();
app.use(express.json());

const WAYFORPAY_MERCHANT_SECRET = "YOUR_MERCHANT_SECRET"; // –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ –≤–∞—à —Å–µ–∫—Ä–µ—Ç–Ω–∏–π –∫–ª—é—á
const TELEGRAM_BOT_TOKEN = "7956466370:AAGVoHPJjWMx6XVfc8owmwambzBHz-m-EbE";
const TELEGRAM_CHAT_ID = "5914562778";

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø—ñ–¥–ø–∏—Å—É WayForPay
function checkWayForPaySignature(data, signature) {
  const hmac = crypto.createHmac("md5", WAYFORPAY_MERCHANT_SECRET);
  const calculatedSignature = hmac.update(JSON.stringify(data)).digest("hex");
  return calculatedSignature === signature;
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ Telegram
async function sendTelegramMessage(message) {
  try {
    await axios.get(
      `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`,
      {
        params: {
          chat_id: TELEGRAM_CHAT_ID,
          text: message,
          parse_mode: "HTML",
        },
      }
    );
  } catch (error) {
    console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ Telegram:", error);
  }
}

// –û–±—Ä–æ–±–Ω–∏–∫ –≤–µ–±—Ö—É–∫–∞ –≤—ñ–¥ WayForPay
app.post("/webhook", async (req, res) => {
  const { data, signature } = req.body;

  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—ñ–¥–ø–∏—Å
  if (!checkWayForPaySignature(data, signature)) {
    console.error("–ù–µ–≤—ñ—Ä–Ω–∏–π –ø—ñ–¥–ø–∏—Å –≤—ñ–¥ WayForPay");
    return res.status(400).json({ error: "–ù–µ–≤—ñ—Ä–Ω–∏–π –ø—ñ–¥–ø–∏—Å" });
  }

  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–∞—Ç—É—Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
  if (data.transactionStatus === "Approved") {
    const message = `
            üí∞ –ù–æ–≤–∏–π —É—Å–ø—ñ—à–Ω–∏–π –ø–ª–∞—Ç—ñ–∂! üí∞\n
            üìù –ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: ${data.orderReference}\n
            üíµ –°—É–º–∞: ${data.amount} ${data.currency}\n
            üë§ –ü–ª–∞—Ç–Ω–∏–∫: ${data.clientName}\n
            üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${data.clientPhone}\n
            üìß Email: ${data.clientEmail}\n
            üïí –î–∞—Ç–∞: ${new Date().toLocaleString()}
        `;

    await sendTelegramMessage(message);
  }

  res.json({ status: "ok" });
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});
